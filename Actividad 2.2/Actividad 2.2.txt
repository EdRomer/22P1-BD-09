1.Cree el procedimiento almacenado "sp_guardar_subscriptor" para actualizar los campos de un subscriptor existente en la base de datos. 

delimiter //
CREATE PROCEDURE sp_guardar_subscriptor((
	in p_idSubscriptor int,
    in p_codSubscriptor int,
    in p_nombSubscriptor varchar(25),
    in p_apeSubscriptor varchar(25)
)
BEGIN
	declare v_idSubscriptor int;
    declare v_codSubscriptor int;
    declare v_nombSubscriptor varchar(25);
    declare v_apeSubscriptor varchar(25);
	
    set v_idSubscriptor = p_idSubscriptor;
    set v_codSubscriptor = p_codSubscriptor;
    set v_nombSubscriptor = p_nombSubscriptor;
    set v_apeSubscriptor = p_apeSubscriptor;
    
    
    update tbl_subscriptores
	set codigo_subscriptor=v_codSubscriptor, nombres=v_nomSubscriptor,apellidos=v_codSubscriptor
    where id_subscriptor=v_idSubscriptor;
commit;
select * from tbl_subscriptores;
END;

2.Cree el procedimiento almacenado "sp_guardar_producto" para crear nuevos productos, debe recibir los parámetros el nombre, la descripción y el precio de costo del producto. El precio de venta debe ser calculado en razón de un 125% del precio de costo. 


delimiter $$
drop procedure if exists
sp_guardar_producto$$
CREATE PROCEDURE sp_guardar_producto(
in p_nombreIN varchar(45),
in p_descripcionIN varchar (45),
in p_precio_costoIN decimal(12,2)
in p_precio_ventaIN decimal(12,2)
)
 
declare v_nombreIN varchar(45);
declare v_descripcionIN varchar (45);
declare v_precio_costoIN decimal(12,2);
declare v_precio_ventaIN decimal(12,2);

set v_nombreIN = p_nombreIN
set v_descripcionIN = p_descripcionIN
set v_precio_costoIN = p_precio_costoIN
set v_precio_ventaIN = p_precio_ventaIN


begin 
set precio_ventaIN=precio_costoIN+
(precio_costoIN*0.125);

insert into tbl_productos (nombre,descripcion,precio_costo,precio_venta);

values(nombreIN, descripcionIN,
precio_costoIN,precio_ventaIN);

commit;

end $$

3.Cree el procedimiento almacenado "sp_guardar_factura" que registre una nueva factura según los parámetros recibidos. 

########################## EjerciciO No3 ############################################ Jose Danilo Rivera #202101607

#Cree el procedimiento almacenado "sp_guardar_factura" que registre una  
#nueva factura según los parámetros recibidos.

select * from bd_sample.tbl_facturas;
DROP PROCEDURE bd_sample.SP_GUARDAR_FACTURA;

DELIMITER //
# crear procedimiento
CREATE PROCEDURE bd_sample.SP_GUARDAR_FACTURA(
	in p_id_factura      	int, 
    in p_fecha_emision      datetime,
    in p_id_subscriptor 	int,
    in p_numero_items 		int,
    in p_isv_total          decimal(12,2),
    in p_subtotal           decimal(12,2),
    in p_totapagar          decimal(12,2)
)
BEGIN
#definir variables

declare v_id_factura      	int;
declare v_fecha_emision     datetime;
declare v_id_subscriptor 	int;
declare v_numero_items 		int;
declare v_isv_total         decimal(12,2);
declare v_subtotal          decimal(12,2);
declare v_totapagar         decimal(12,2);


 #asignar valores de parametros a variables 
    set v_id_factura 		= p_id_factura;
	set v_fecha_emision	    = p_fecha_emision; 
    set v_id_subscriptor	= p_id_subscriptor;
    set v_numero_items 		= p_numero_items;
    set v_isv_total         = p_isv_total;
    set v_subtotal          = p_subtotal;
    set v_totapagar         = p_totapagar;
    
# crear factura

 insert into bd_sample.tbl_facturas (
   id_factura, fecha_emision, id_subscriptor, numero_items, isv_total, subtotal, totapagar
 )values(
    v_id_factura, v_fecha_emision,v_id_subscriptor,v_numero_items,v_isv_total,v_subtotal,v_totapagar
 );
 
 
 commit;
END;

# Ejecutar procedimiento 
CALL bd_sample.SP_GUARDAR_FACTURA(
	null, 					# p_id_factura  
	curdate(),    			# p_fecha_emision 
    12,				        # p_id_subscriptor			 
    0 ,				        # p_numero_items 
	0 ,				        # p_isv_total
	0 ,				        # p_subtotal
	0 				        # p_totapagar
);

#Buscar factura

select * 
from bd_sample.tbl_facturas
where fecha_emision =(select max(fecha_emision)
from bd_sample.tbl_facturas) and id_subscriptor=12;

4.Cree el procedimiento almacenado "sp_procesar_factura " que registre el proceso de facturación: 
-Registra un producto de acuerdo un numero de factura en la tabla ítems factura.
-Actualiza los valores de la factura con los valores totales

select * from tbl_items_factura;
delimiter //
CREATE PROCEDURE sp_guardar_subscriptor(
	in p_idFactura int,
    in p_idProducto int,
    in p_Cantidad int,
    in p_precio int
)
BEGIN
	declare v_idFactura int;
    declare v_idProducto int;
    declare v_Cantidad int;
    declare v_precio int;
    
    set v_idFactura = p_idFactura;
    set v_idProducto = p_idProducto;
    set v_Cantidad = p_Cantidad;
    set v_precio = p_precio;
    
    
    insert tbl_items_factura (id_factura,id_subscriptor,cantidad)
    values (v_idFactura,v_idProducto,v_Cantidad);
    
    update tbl_facturas
    Set numero_item=numero_item+1,subtotal= subtotal + v_precio, isv_total= (subtotal + v_precio)*0.15, totapagar=(subtotal + v_precio)*1.15
    where id_factura=v_idFactura;
    
END;